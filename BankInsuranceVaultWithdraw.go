// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package marginfi

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// BankInsuranceVaultWithdraw is the `bankInsuranceVaultWithdraw` instruction.
type BankInsuranceVaultWithdraw struct {
	Amount *uint64

	// [0] = [WRITE] marginfiGroup
	//
	// [1] = [SIGNER] admin
	//
	// [2] = [WRITE] insuranceVault
	//
	// [3] = [] insuranceVaultAuthority
	//
	// [4] = [WRITE] recipientTokenAccount
	//
	// [5] = [] tokenProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewBankInsuranceVaultWithdrawInstructionBuilder creates a new `BankInsuranceVaultWithdraw` instruction builder.
func NewBankInsuranceVaultWithdrawInstructionBuilder() *BankInsuranceVaultWithdraw {
	nd := &BankInsuranceVaultWithdraw{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 6),
	}
	return nd
}

// SetAmount sets the "amount" parameter.
func (inst *BankInsuranceVaultWithdraw) SetAmount(amount uint64) *BankInsuranceVaultWithdraw {
	inst.Amount = &amount
	return inst
}

// SetMarginfiGroupAccount sets the "marginfiGroup" account.
func (inst *BankInsuranceVaultWithdraw) SetMarginfiGroupAccount(marginfiGroup ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(marginfiGroup).WRITE()
	return inst
}

// GetMarginfiGroupAccount gets the "marginfiGroup" account.
func (inst *BankInsuranceVaultWithdraw) GetMarginfiGroupAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAdminAccount sets the "admin" account.
func (inst *BankInsuranceVaultWithdraw) SetAdminAccount(admin ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(admin).SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *BankInsuranceVaultWithdraw) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetInsuranceVaultAccount sets the "insuranceVault" account.
func (inst *BankInsuranceVaultWithdraw) SetInsuranceVaultAccount(insuranceVault ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(insuranceVault).WRITE()
	return inst
}

// GetInsuranceVaultAccount gets the "insuranceVault" account.
func (inst *BankInsuranceVaultWithdraw) GetInsuranceVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetInsuranceVaultAuthorityAccount sets the "insuranceVaultAuthority" account.
func (inst *BankInsuranceVaultWithdraw) SetInsuranceVaultAuthorityAccount(insuranceVaultAuthority ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(insuranceVaultAuthority)
	return inst
}

// GetInsuranceVaultAuthorityAccount gets the "insuranceVaultAuthority" account.
func (inst *BankInsuranceVaultWithdraw) GetInsuranceVaultAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetRecipientTokenAccount sets the "recipientTokenAccount" account.
func (inst *BankInsuranceVaultWithdraw) SetRecipientTokenAccount(recipientTokenAccount ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(recipientTokenAccount).WRITE()
	return inst
}

// GetRecipientTokenAccount gets the "recipientTokenAccount" account.
func (inst *BankInsuranceVaultWithdraw) GetRecipientTokenAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetTokenProgramAccount sets the "tokenProgram" account.
func (inst *BankInsuranceVaultWithdraw) SetTokenProgramAccount(tokenProgram ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(tokenProgram)
	return inst
}

// GetTokenProgramAccount gets the "tokenProgram" account.
func (inst *BankInsuranceVaultWithdraw) GetTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

func (inst BankInsuranceVaultWithdraw) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_BankInsuranceVaultWithdraw,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst BankInsuranceVaultWithdraw) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *BankInsuranceVaultWithdraw) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.Amount == nil {
			return errors.New("Amount parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.MarginfiGroup is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Admin is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.InsuranceVault is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.InsuranceVaultAuthority is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.RecipientTokenAccount is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.TokenProgram is not set")
		}
	}
	return nil
}

func (inst *BankInsuranceVaultWithdraw) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("BankInsuranceVaultWithdraw")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("Amount", *inst.Amount))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=6]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("          marginfiGroup", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("                  admin", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("         insuranceVault", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("insuranceVaultAuthority", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("         recipientToken", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("           tokenProgram", inst.AccountMetaSlice.Get(5)))
					})
				})
		})
}

func (obj BankInsuranceVaultWithdraw) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `Amount` param:
	err = encoder.Encode(obj.Amount)
	if err != nil {
		return err
	}
	return nil
}
func (obj *BankInsuranceVaultWithdraw) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `Amount`:
	err = decoder.Decode(&obj.Amount)
	if err != nil {
		return err
	}
	return nil
}

// NewBankInsuranceVaultWithdrawInstruction declares a new BankInsuranceVaultWithdraw instruction with the provided parameters and accounts.
func NewBankInsuranceVaultWithdrawInstruction(
	// Parameters:
	amount uint64,
	// Accounts:
	marginfiGroup ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	insuranceVault ag_solanago.PublicKey,
	insuranceVaultAuthority ag_solanago.PublicKey,
	recipientTokenAccount ag_solanago.PublicKey,
	tokenProgram ag_solanago.PublicKey) *BankInsuranceVaultWithdraw {
	return NewBankInsuranceVaultWithdrawInstructionBuilder().
		SetAmount(amount).
		SetMarginfiGroupAccount(marginfiGroup).
		SetAdminAccount(admin).
		SetInsuranceVaultAccount(insuranceVault).
		SetInsuranceVaultAuthorityAccount(insuranceVaultAuthority).
		SetRecipientTokenAccount(recipientTokenAccount).
		SetTokenProgramAccount(tokenProgram)
}
