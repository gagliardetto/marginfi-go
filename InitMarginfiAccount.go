// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package marginfi

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitMarginfiAccount is the `initMarginfiAccount` instruction.
type InitMarginfiAccount struct {

	// [0] = [WRITE, SIGNER] authority
	//
	// [1] = [] marginfiGroup
	//
	// [2] = [WRITE] marginfiAccount
	//
	// [3] = [] systemProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitMarginfiAccountInstructionBuilder creates a new `InitMarginfiAccount` instruction builder.
func NewInitMarginfiAccountInstructionBuilder() *InitMarginfiAccount {
	nd := &InitMarginfiAccount{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 4),
	}
	return nd
}

// SetAuthorityAccount sets the "authority" account.
func (inst *InitMarginfiAccount) SetAuthorityAccount(authority ag_solanago.PublicKey) *InitMarginfiAccount {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(authority).WRITE().SIGNER()
	return inst
}

// GetAuthorityAccount gets the "authority" account.
func (inst *InitMarginfiAccount) GetAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetMarginfiGroupAccount sets the "marginfiGroup" account.
func (inst *InitMarginfiAccount) SetMarginfiGroupAccount(marginfiGroup ag_solanago.PublicKey) *InitMarginfiAccount {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(marginfiGroup)
	return inst
}

// GetMarginfiGroupAccount gets the "marginfiGroup" account.
func (inst *InitMarginfiAccount) GetMarginfiGroupAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetMarginfiAccount sets the "marginfiAccount" account.
func (inst *InitMarginfiAccount) SetMarginfiAccount(marginfiAccount ag_solanago.PublicKey) *InitMarginfiAccount {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(marginfiAccount).WRITE()
	return inst
}

// GetMarginfiAccount gets the "marginfiAccount" account.
func (inst *InitMarginfiAccount) GetMarginfiAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *InitMarginfiAccount) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *InitMarginfiAccount {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *InitMarginfiAccount) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

func (inst InitMarginfiAccount) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_InitMarginfiAccount,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitMarginfiAccount) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitMarginfiAccount) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Authority is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.MarginfiGroup is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.MarginfiAccount is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *InitMarginfiAccount) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitMarginfiAccount")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=4]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("    authority", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("marginfiGroup", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("     marginfi", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("systemProgram", inst.AccountMetaSlice.Get(3)))
					})
				})
		})
}

func (obj InitMarginfiAccount) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *InitMarginfiAccount) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewInitMarginfiAccountInstruction declares a new InitMarginfiAccount instruction with the provided parameters and accounts.
func NewInitMarginfiAccountInstruction(
	// Accounts:
	authority ag_solanago.PublicKey,
	marginfiGroup ag_solanago.PublicKey,
	marginfiAccount ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *InitMarginfiAccount {
	return NewInitMarginfiAccountInstructionBuilder().
		SetAuthorityAccount(authority).
		SetMarginfiGroupAccount(marginfiGroup).
		SetMarginfiAccount(marginfiAccount).
		SetSystemProgramAccount(systemProgram)
}
