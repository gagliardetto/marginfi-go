// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package marginfi

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// InitMarginfiGroup is the `initMarginfiGroup` instruction.
type InitMarginfiGroup struct {
	BankAuthorityPdaBump           *uint8
	InsuranceVaultAuthorityPdaBump *uint8
	FeeVaultAuthorityPdaBump       *uint8

	// [0] = [WRITE] marginfiGroup
	//
	// [1] = [WRITE, SIGNER] admin
	//
	// [2] = [] collateralMint
	//
	// [3] = [] bankVault
	//
	// [4] = [] bankAuthority
	//
	// [5] = [] insuranceVault
	//
	// [6] = [] insuranceVaultAuthority
	//
	// [7] = [] feeVault
	//
	// [8] = [] feeVaultAuthority
	//
	// [9] = [] systemProgram
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewInitMarginfiGroupInstructionBuilder creates a new `InitMarginfiGroup` instruction builder.
func NewInitMarginfiGroupInstructionBuilder() *InitMarginfiGroup {
	nd := &InitMarginfiGroup{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 10),
	}
	return nd
}

// SetBankAuthorityPdaBump sets the "bankAuthorityPdaBump" parameter.
func (inst *InitMarginfiGroup) SetBankAuthorityPdaBump(bankAuthorityPdaBump uint8) *InitMarginfiGroup {
	inst.BankAuthorityPdaBump = &bankAuthorityPdaBump
	return inst
}

// SetInsuranceVaultAuthorityPdaBump sets the "insuranceVaultAuthorityPdaBump" parameter.
func (inst *InitMarginfiGroup) SetInsuranceVaultAuthorityPdaBump(insuranceVaultAuthorityPdaBump uint8) *InitMarginfiGroup {
	inst.InsuranceVaultAuthorityPdaBump = &insuranceVaultAuthorityPdaBump
	return inst
}

// SetFeeVaultAuthorityPdaBump sets the "feeVaultAuthorityPdaBump" parameter.
func (inst *InitMarginfiGroup) SetFeeVaultAuthorityPdaBump(feeVaultAuthorityPdaBump uint8) *InitMarginfiGroup {
	inst.FeeVaultAuthorityPdaBump = &feeVaultAuthorityPdaBump
	return inst
}

// SetMarginfiGroupAccount sets the "marginfiGroup" account.
func (inst *InitMarginfiGroup) SetMarginfiGroupAccount(marginfiGroup ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(marginfiGroup).WRITE()
	return inst
}

// GetMarginfiGroupAccount gets the "marginfiGroup" account.
func (inst *InitMarginfiGroup) GetMarginfiGroupAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAdminAccount sets the "admin" account.
func (inst *InitMarginfiGroup) SetAdminAccount(admin ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(admin).WRITE().SIGNER()
	return inst
}

// GetAdminAccount gets the "admin" account.
func (inst *InitMarginfiGroup) GetAdminAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetCollateralMintAccount sets the "collateralMint" account.
func (inst *InitMarginfiGroup) SetCollateralMintAccount(collateralMint ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(collateralMint)
	return inst
}

// GetCollateralMintAccount gets the "collateralMint" account.
func (inst *InitMarginfiGroup) GetCollateralMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetBankVaultAccount sets the "bankVault" account.
func (inst *InitMarginfiGroup) SetBankVaultAccount(bankVault ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(bankVault)
	return inst
}

// GetBankVaultAccount gets the "bankVault" account.
func (inst *InitMarginfiGroup) GetBankVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetBankAuthorityAccount sets the "bankAuthority" account.
func (inst *InitMarginfiGroup) SetBankAuthorityAccount(bankAuthority ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(bankAuthority)
	return inst
}

// GetBankAuthorityAccount gets the "bankAuthority" account.
func (inst *InitMarginfiGroup) GetBankAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetInsuranceVaultAccount sets the "insuranceVault" account.
func (inst *InitMarginfiGroup) SetInsuranceVaultAccount(insuranceVault ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(insuranceVault)
	return inst
}

// GetInsuranceVaultAccount gets the "insuranceVault" account.
func (inst *InitMarginfiGroup) GetInsuranceVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetInsuranceVaultAuthorityAccount sets the "insuranceVaultAuthority" account.
func (inst *InitMarginfiGroup) SetInsuranceVaultAuthorityAccount(insuranceVaultAuthority ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(insuranceVaultAuthority)
	return inst
}

// GetInsuranceVaultAuthorityAccount gets the "insuranceVaultAuthority" account.
func (inst *InitMarginfiGroup) GetInsuranceVaultAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetFeeVaultAccount sets the "feeVault" account.
func (inst *InitMarginfiGroup) SetFeeVaultAccount(feeVault ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(feeVault)
	return inst
}

// GetFeeVaultAccount gets the "feeVault" account.
func (inst *InitMarginfiGroup) GetFeeVaultAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetFeeVaultAuthorityAccount sets the "feeVaultAuthority" account.
func (inst *InitMarginfiGroup) SetFeeVaultAuthorityAccount(feeVaultAuthority ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(feeVaultAuthority)
	return inst
}

// GetFeeVaultAuthorityAccount gets the "feeVaultAuthority" account.
func (inst *InitMarginfiGroup) GetFeeVaultAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetSystemProgramAccount sets the "systemProgram" account.
func (inst *InitMarginfiGroup) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *InitMarginfiGroup {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "systemProgram" account.
func (inst *InitMarginfiGroup) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

func (inst InitMarginfiGroup) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_InitMarginfiGroup,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst InitMarginfiGroup) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *InitMarginfiGroup) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.BankAuthorityPdaBump == nil {
			return errors.New("BankAuthorityPdaBump parameter is not set")
		}
		if inst.InsuranceVaultAuthorityPdaBump == nil {
			return errors.New("InsuranceVaultAuthorityPdaBump parameter is not set")
		}
		if inst.FeeVaultAuthorityPdaBump == nil {
			return errors.New("FeeVaultAuthorityPdaBump parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.MarginfiGroup is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Admin is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.CollateralMint is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.BankVault is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.BankAuthority is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.InsuranceVault is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.InsuranceVaultAuthority is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.FeeVault is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.FeeVaultAuthority is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *InitMarginfiGroup) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("InitMarginfiGroup")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=3]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("          BankAuthorityPdaBump", *inst.BankAuthorityPdaBump))
						paramsBranch.Child(ag_format.Param("InsuranceVaultAuthorityPdaBump", *inst.InsuranceVaultAuthorityPdaBump))
						paramsBranch.Child(ag_format.Param("      FeeVaultAuthorityPdaBump", *inst.FeeVaultAuthorityPdaBump))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=10]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("          marginfiGroup", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("                  admin", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("         collateralMint", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("              bankVault", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("          bankAuthority", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("         insuranceVault", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("insuranceVaultAuthority", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("               feeVault", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("      feeVaultAuthority", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("          systemProgram", inst.AccountMetaSlice.Get(9)))
					})
				})
		})
}

func (obj InitMarginfiGroup) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `BankAuthorityPdaBump` param:
	err = encoder.Encode(obj.BankAuthorityPdaBump)
	if err != nil {
		return err
	}
	// Serialize `InsuranceVaultAuthorityPdaBump` param:
	err = encoder.Encode(obj.InsuranceVaultAuthorityPdaBump)
	if err != nil {
		return err
	}
	// Serialize `FeeVaultAuthorityPdaBump` param:
	err = encoder.Encode(obj.FeeVaultAuthorityPdaBump)
	if err != nil {
		return err
	}
	return nil
}
func (obj *InitMarginfiGroup) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `BankAuthorityPdaBump`:
	err = decoder.Decode(&obj.BankAuthorityPdaBump)
	if err != nil {
		return err
	}
	// Deserialize `InsuranceVaultAuthorityPdaBump`:
	err = decoder.Decode(&obj.InsuranceVaultAuthorityPdaBump)
	if err != nil {
		return err
	}
	// Deserialize `FeeVaultAuthorityPdaBump`:
	err = decoder.Decode(&obj.FeeVaultAuthorityPdaBump)
	if err != nil {
		return err
	}
	return nil
}

// NewInitMarginfiGroupInstruction declares a new InitMarginfiGroup instruction with the provided parameters and accounts.
func NewInitMarginfiGroupInstruction(
	// Parameters:
	bankAuthorityPdaBump uint8,
	insuranceVaultAuthorityPdaBump uint8,
	feeVaultAuthorityPdaBump uint8,
	// Accounts:
	marginfiGroup ag_solanago.PublicKey,
	admin ag_solanago.PublicKey,
	collateralMint ag_solanago.PublicKey,
	bankVault ag_solanago.PublicKey,
	bankAuthority ag_solanago.PublicKey,
	insuranceVault ag_solanago.PublicKey,
	insuranceVaultAuthority ag_solanago.PublicKey,
	feeVault ag_solanago.PublicKey,
	feeVaultAuthority ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *InitMarginfiGroup {
	return NewInitMarginfiGroupInstructionBuilder().
		SetBankAuthorityPdaBump(bankAuthorityPdaBump).
		SetInsuranceVaultAuthorityPdaBump(insuranceVaultAuthorityPdaBump).
		SetFeeVaultAuthorityPdaBump(feeVaultAuthorityPdaBump).
		SetMarginfiGroupAccount(marginfiGroup).
		SetAdminAccount(admin).
		SetCollateralMintAccount(collateralMint).
		SetBankVaultAccount(bankVault).
		SetBankAuthorityAccount(bankAuthority).
		SetInsuranceVaultAccount(insuranceVault).
		SetInsuranceVaultAuthorityAccount(insuranceVaultAuthority).
		SetFeeVaultAccount(feeVault).
		SetFeeVaultAuthorityAccount(feeVaultAuthority).
		SetSystemProgramAccount(systemProgram)
}
